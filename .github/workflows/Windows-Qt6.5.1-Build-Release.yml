name: Windows-Qt6.5.1-Build-Release
on:
  workflow_dispatch:
#  push:
#    paths:
#      - 'thirdTarget_I2CTool/**'
#      - '.github/workflows/Windows-Qt6.5.1.yml'
#  pull_request:
#    paths:
#      - 'thirdTarget_I2CTool/**'
#      - '.github/workflows/Windows-Qt6.5.1.yml'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        include:
          - qt_ver: 6.5.3
            qt_arch: win64_msvc2019_64
            msvc_arch: x64
            qt_arch_install: msvc2019_64
    env:
      targetName: ComTool.exe
      fileName: ComTool
    steps:
      #准备仓库
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      #准备编译链
      - name: Setup ninja
        uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.10.2
      #准备Qt
      - name: Install qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          cache: ${{steps.cache-qt.outputs.cache-hit}}
          modules: 'qt5compat qtmultimedia qtshadertools qtimageformats qtspeech qt3d qtscxml qtserialport qthttpserver qtwebsockets qtscxml'
      #准备boost
      - name: vcpkg build
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          pkgs: boost-python
          triplet: x64-windows-release
          token: ${{ github.token }}
          github-binarycache: true
      #编译与打包
      - name: Msvc build & Package
        id: build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
          ninja --version
          mkdir build
          cd build
          cmake -DCMAKE_MESSAGE_LOG_LEVEL=STATUS -DBoost_NO_SYSTEM_PATHS=ON -DBoost_LIBRARY_DIR_RELEASE=D:\a/WirelessMonitor/WirelessMonitor/vcpkg/installed/x64-windows/lib -DCMAKE_PREFIX_PATH=D:\a\WirelessMonitor\Qt\${{ matrix.qt_ver }}\msvc2019_64\lib\cmake\;D:\a\WirelessMonitor\WirelessMonitor\vcpkg\installed\x64-windows-release\share\ -DCMAKE_TOOLCHAIN_FILE=D:\a/WirelessMonitor/WirelessMonitor/vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_BUILD_TYPE=Release -j4 -GNinja ..                
          cmake --build . --target all --config Release --parallel
          cmake --build . --target package
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsInstallDir=%VCToolsInstallDir% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
      #编译失败时打开调试接口
      - name: Setup tmate session if failed
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false
          timeout-minutes: 300
      #发布Release
      - name: New Release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/FluGalleryWin64Msvc.zip
          asset_name: ${{ env.fileName }}_${{ github.ref_name }}_${{ matrix.qt_arch }}_Qt${{ matrix.qt_ver }}.zip
          tag: ${{ github.ref }}
          overwrite: true


